version: 2.1
executors:
  terraform:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.3.6
    working_directory: /tmp/project

jobs:
  plan-apply:
    parameters:
      project:
        type: string
      tfvars:
        type: string
        default: ""
    executor: terraform
    steps:
      - checkout
      - run:
          name: terraform init, plan & apply
          command: |
            cd ./infra/<< parameters.project >>
            echo "<< parameters.tfvars >>" > terraform.tfvars
            terraform init -input=false
            terraform workspace new test-${CIRCLE_SHA1}
            terraform plan -out tfapply
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-destroy:
    parameters:
      project:
        type: string
    executor: terraform
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan & destroy
          command: |
            cd ./infra/<< parameters.project >>
            terraform plan -destroy -out tfdestroy
            terraform apply -auto-approve tfdestroy
            terraform workspace select default
            terraform workspace delete test-${CIRCLE_SHA1}
      - persist_to_workspace:
          root: .
          paths:
            - .


# Orchestrate our job run sequence
workflows:
  integration_test:
    jobs:
      - hold-apply:
          type: approval
      - plan-apply:
          name: plan-apply-core
          project: core
          requires:
            - hold-apply
          context:
            - personal-aws-context
      - plan-apply:
          name: plan-apply-back
          project: back
          tfvars: |
            db_snapshot_id = "test-seed"
          requires:
            - plan-apply-core
          context:
            - personal-aws-context
      - hold-destroy:
          type: approval
          requires:
            - plan-apply-back
          context:
            - personal-aws-context
      - plan-destroy:
          name: plan-destroy-back
          project: back
          requires:
            - hold-destroy
          context:
            - personal-aws-context
      - plan-destroy:
          name: plan-destroy-core
          project: core
          requires:
            - plan-destroy-back
          context:
            - personal-aws-context
